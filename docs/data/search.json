{"list":[{"title":"AbstractNode","link":"<a href=\"AbstractNode.html\">AbstractNode</a>","description":"<p>Contructs the primary interface for a kad node</p>"},{"title":"AbstractNode#event:error","link":"<a href=\"AbstractNode.html#event:error\">error</a>","description":"<p>Error event fires when a critical failure has occurred; if no handler is\nspecified, then it will throw</p>"},{"title":"AbstractNode#event:join","link":"<a href=\"AbstractNode.html#event:join\">join</a>","description":"<p>Join event is triggered when the routing table is no longer empty</p>"},{"title":"AbstractNode#listen","link":"<a href=\"AbstractNode.html#listen\">listen</a>","description":"<p>Passes through to the {@link AbstractNode~transport}</p>"},{"title":"AbstractNode#plugin","link":"<a href=\"AbstractNode.html#plugin\">plugin</a>","description":"<p>Accepts an arbitrary function that receives this node as context\nfor mounting protocol handlers and extending the node with other\nmethods</p>"},{"title":"AbstractNode#receive","link":"<a href=\"AbstractNode.html#receive\">receive</a>","description":"<p>Processes a the given arguments by sending them through the appropriate\nmiddleware stack</p>"},{"title":"AbstractNode#send","link":"<a href=\"AbstractNode.html#send\">send</a>","description":"<p>Sends the [method, params] to the contact and executes the handler on\nresponse or timeout</p>"},{"title":"AbstractNode#use","link":"<a href=\"AbstractNode.html#use\">use</a>","description":"<p>Mounts a message handler route for processing incoming RPC messages</p>"},{"title":"AbstractNode~logger","link":"<a href=\"AbstractNode.html#~logger\">logger</a>"},{"title":"AbstractNode~middleware","link":"<a href=\"AbstractNode.html#~middleware\">middleware</a>"},{"title":"AbstractNode~next","link":"<a href=\"AbstractNode.html#~next\">next</a>"},{"title":"AbstractNode~request","link":"<a href=\"AbstractNode.html#~request\">request</a>"},{"title":"AbstractNode~response","link":"<a href=\"AbstractNode.html#~response\">response</a>"},{"title":"AbstractNode~responseError","link":"<a href=\"AbstractNode.html#~responseError\">responseError</a>"},{"title":"AbstractNode~responseSend","link":"<a href=\"AbstractNode.html#~responseSend\">responseSend</a>"},{"title":"AbstractNode~sendCallback","link":"<a href=\"AbstractNode.html#~sendCallback\">sendCallback</a>"},{"title":"AbstractNode~sendError","link":"<a href=\"AbstractNode.html#~sendError\">sendError</a>"},{"title":"AbstractNode~storage","link":"<a href=\"AbstractNode.html#~storage\">storage</a>","description":"<p>Implements a subset of the LevelUP interface</p>"},{"title":"AbstractNode~transport","link":"<a href=\"AbstractNode.html#~transport\">transport</a>"},{"title":"Bucket","link":"<a href=\"Bucket.html\">Bucket</a>"},{"title":"Bucket#getClosestToKey","link":"<a href=\"Bucket.html#getClosestToKey\">getClosestToKey</a>","description":"<p>Returns an array of contacts in the bucket that are closest to the given\nkey</p>"},{"title":"Bucket#head","link":"<a href=\"Bucket.html#head\">head</a>"},{"title":"Bucket#indexOf","link":"<a href=\"Bucket.html#indexOf\">indexOf</a>","description":"<p>Returns the index of the given node id</p>"},{"title":"Bucket#length","link":"<a href=\"Bucket.html#length\">length</a>"},{"title":"Bucket#set","link":"<a href=\"Bucket.html#set\">set</a>","description":"<p>Sets the contact to the node ID in the bucket if it is not full; if the\nbucket already contains the contact, move it to the tail - otherwise we\nplace it at the head</p>"},{"title":"Bucket#tail","link":"<a href=\"Bucket.html#tail\">tail</a>"},{"title":"Bucket~contact","link":"<a href=\"Bucket.html#~contact\">contact</a>"},{"title":"ContactList","link":"<a href=\"ContactList.html\">ContactList</a>"},{"title":"ContactList#active","link":"<a href=\"ContactList.html#active\">active</a>"},{"title":"ContactList#add","link":"<a href=\"ContactList.html#add\">add</a>","description":"<p>Adds the given contacts to the list</p>"},{"title":"ContactList#closest","link":"<a href=\"ContactList.html#closest\">closest</a>"},{"title":"ContactList#contacted","link":"<a href=\"ContactList.html#contacted\">contacted</a>","description":"<p>Marks the supplied contact as contacted</p>"},{"title":"ContactList#responded","link":"<a href=\"ContactList.html#responded\">responded</a>","description":"<p>Marks the supplied contact as active</p>"},{"title":"ContactList#uncontacted","link":"<a href=\"ContactList.html#uncontacted\">uncontacted</a>"},{"title":"Control","link":"<a href=\"Control.html\">Control</a>"},{"title":"Control#getProtocolInfo","link":"<a href=\"Control.html#getProtocolInfo\">getProtocolInfo</a>","description":"<p>Returns basic informations about the running node</p>"},{"title":"Control#listMethods","link":"<a href=\"Control.html#listMethods\">listMethods</a>","description":"<p>Returns a list of the support methods from the controller</p>"},{"title":"Control~getProtocolInfoCallback","link":"<a href=\"Control.html#~getProtocolInfoCallback\">getProtocolInfoCallback</a>"},{"title":"Control~listMethodsCallback","link":"<a href=\"Control.html#~listMethodsCallback\">listMethodsCallback</a>"},{"title":"ErrorRules","link":"<a href=\"ErrorRules.html\">ErrorRules</a>","description":"<p>Constructs a error rules instance in the context of a\n{@link AbstractNode}</p>"},{"title":"ErrorRules#internalError","link":"<a href=\"ErrorRules.html#internalError\">internalError</a>","description":"<p>Formats the errors response according to the error object given</p>"},{"title":"ErrorRules#methodNotFound","link":"<a href=\"ErrorRules.html#methodNotFound\">methodNotFound</a>","description":"<p>Assumes if no error object exists, then there is simply no method defined</p>"},{"title":"HTTPSTransport","link":"<a href=\"HTTPSTransport.html\">HTTPSTransport</a>","description":"<p>Contructs a new HTTPS transport adapter</p>"},{"title":"HTTPTransport","link":"<a href=\"HTTPTransport.html\">HTTPTransport</a>","description":"<p>Contructs a HTTP transport adapter</p>"},{"title":"HTTPTransport#listen","link":"<a href=\"HTTPTransport.html#listen\">listen</a>","description":"<p>Binds the server to the given address/port</p>"},{"title":"KademliaNode","link":"<a href=\"KademliaNode.html\">KademliaNode</a>"},{"title":"KademliaNode#expire","link":"<a href=\"KademliaNode.html#expire\">expire</a>","description":"<p>Items expire T_EXPIRE seconds after the original publication. All items\nare assigned an expiration time which is &quot;exponentially inversely\nproportional to the number of nodes between the current node and the node\nwhose ID is closest to the key&quot;, where this number is &quot;inferred from the\nbucket structure of the current node&quot;.</p>"},{"title":"KademliaNode#iterativeFindNode","link":"<a href=\"KademliaNode.html#iterativeFindNode\">iterativeFindNode</a>","description":"<p>Basic kademlia lookup operation that builds a set of K contacts closest\nto the given key</p>"},{"title":"KademliaNode#iterativeFindValue","link":"<a href=\"KademliaNode.html#iterativeFindValue\">iterativeFindValue</a>","description":"<p>Kademlia search operation that is conducted as a node lookup and builds\na list of K closest contacts. If at any time during the lookup the value\nis returned, the search is abandoned. If no value is found, the K closest\ncontacts are returned. Upon success, we must store the value at the\nnearest node seen during the search that did not return the value.</p>"},{"title":"KademliaNode#iterativeStore","link":"<a href=\"KademliaNode.html#iterativeStore\">iterativeStore</a>","description":"<p>Performs a {@link KademliaNode#iterativeFindNode} to collect K contacts\nnearest to the given key, sending a STORE message to each of them.</p>"},{"title":"KademliaNode#join","link":"<a href=\"KademliaNode.html#join\">join</a>","description":"<p>Inserts the given contact into the routing table and uses it to perform\na {@link KademliaNode#iterativeFindNode} for this node's identity,\nthen refreshes all buckets further than it's closest neighbor, which will\nbe in the occupied bucket with the lowest index</p>"},{"title":"KademliaNode#listen","link":"<a href=\"KademliaNode.html#listen\">listen</a>","description":"<p>Adds the kademlia rule handlers before calling super#listen()</p>"},{"title":"KademliaNode#ping","link":"<a href=\"KademliaNode.html#ping\">ping</a>","description":"<p>Sends a PING message to the supplied contact, resolves with latency</p>"},{"title":"KademliaNode#refresh","link":"<a href=\"KademliaNode.html#refresh\">refresh</a>","description":"<p>If no node lookups have been performed in any given bucket's range for\nT_REFRESH, the node selects a random number in that range and does a\nrefresh, an iterativeFindNode using that number as key.</p>"},{"title":"KademliaNode#replicate","link":"<a href=\"KademliaNode.html#replicate\">replicate</a>","description":"<p>Performs a scan of the storage adapter and performs\nrepublishing/replication of items stored. Items that we did not publish\nourselves get republished every T_REPLICATE. Items we did publish get\nrepublished every T_REPUBLISH.</p>"},{"title":"KademliaNode~entry","link":"<a href=\"KademliaNode.html#~entry\">entry</a>"},{"title":"KademliaNode~expireCallback","link":"<a href=\"KademliaNode.html#~expireCallback\">expireCallback</a>"},{"title":"KademliaNode~iterativeFindNodeCallback","link":"<a href=\"KademliaNode.html#~iterativeFindNodeCallback\">iterativeFindNodeCallback</a>"},{"title":"KademliaNode~iterativeFindValueCallback","link":"<a href=\"KademliaNode.html#~iterativeFindValueCallback\">iterativeFindValueCallback</a>"},{"title":"KademliaNode~iterativeStoreCallback","link":"<a href=\"KademliaNode.html#~iterativeStoreCallback\">iterativeStoreCallback</a>","description":"<p>Note that if there is a protocol/validation error, you will not receive\nit as an error in the callback. Be sure to also check that stored &gt; 0 as\npart of error handling here.</p>"},{"title":"KademliaNode~pingCallback","link":"<a href=\"KademliaNode.html#~pingCallback\">pingCallback</a>"},{"title":"KademliaNode~refreshCallback","link":"<a href=\"KademliaNode.html#~refreshCallback\">refreshCallback</a>"},{"title":"KademliaNode~replicateCallback","link":"<a href=\"KademliaNode.html#~replicateCallback\">replicateCallback</a>"},{"title":"KademliaRules","link":"<a href=\"KademliaRules.html\">KademliaRules</a>","description":"<p>Constructs a kademlia rules instance in the context of a\n{@link KademliaNode}</p>"},{"title":"KademliaRules#findNode","link":"<a href=\"KademliaRules.html#findNode\">findNode</a>","description":"<p>The FIND_NODE RPC includes a 160-bit key. The recipient of the RPC returns\nup to K contacts that it knows to be closest to the key. The recipient\nmust return K contacts if at all possible. It may only return fewer than K\nif it is returning all of the contacts that it has knowledge of.</p>"},{"title":"KademliaRules#findValue","link":"<a href=\"KademliaRules.html#findValue\">findValue</a>","description":"<p>A FIND_VALUE RPC includes a B=160-bit key. If a corresponding value is\npresent on the recipient, the associated data is returned. Otherwise the\nRPC is equivalent to a FIND_NODE and a set of K contacts is returned.</p>"},{"title":"KademliaRules#ping","link":"<a href=\"KademliaRules.html#ping\">ping</a>","description":"<p>This RPC involves one node sending a PING message to another, which\npresumably replies with a PONG. This has a two-fold effect: the\nrecipient of the PING must update the bucket corresponding to the\nsender; and, if there is a reply, the sender must update the bucket\nappropriate to the recipient.</p>"},{"title":"KademliaRules#store","link":"<a href=\"KademliaRules.html#store\">store</a>","description":"<p>The sender of the STORE RPC provides a key and a block of data and\nrequires that the recipient store the data and make it available for\nlater retrieval by that key.</p>"},{"title":"Messenger","link":"<a href=\"Messenger.html\">Messenger</a>"},{"title":"Messenger.JsonRpcDeserializer","link":"<a href=\"Messenger.html#.JsonRpcDeserializer\">JsonRpcDeserializer</a>"},{"title":"Messenger.JsonRpcSerializer","link":"<a href=\"Messenger.html#.JsonRpcSerializer\">JsonRpcSerializer</a>"},{"title":"Messenger~deserializer","link":"<a href=\"Messenger.html#~deserializer\">deserializer</a>"},{"title":"Messenger~deserializerCallback","link":"<a href=\"Messenger.html#~deserializerCallback\">deserializerCallback</a>"},{"title":"Messenger~serializer","link":"<a href=\"Messenger.html#~serializer\">serializer</a>"},{"title":"Messenger~serializerCallback","link":"<a href=\"Messenger.html#~serializerCallback\">serializerCallback</a>"},{"title":"module:dusk/churnfilter","link":"<a href=\"module-kadence_churnfilter.html\">dusk/churnfilter</a>"},{"title":"module:dusk/churnfilter","link":"<a href=\"module-kadence_churnfilter.html\">module:dusk/churnfilter</a>","description":"<p>Registers a {@link module:dusk/contentaddress~ChurnFilterPlugin} with\na {@link KademliaNode}</p>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html\">ChurnFilterPlugin</a>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin#delBlock","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html#delBlock\">delBlock</a>","description":"<p>Deletes the blocked fingerprint</p>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin#hasBlock","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html#hasBlock\">hasBlock</a>","description":"<p>Checks if the fingerprint is blocked</p>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin#reset","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html#reset\">reset</a>","description":"<p>Clears all blocked and cooldown data</p>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin#resetCooldownForStablePeers","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html#resetCooldownForStablePeers\">resetCooldownForStablePeers</a>","description":"<p>Releases blocked to reset cooldown multipliers for fingerprints with\ncooldowns that are long expired and not blocked</p>"},{"title":"module:dusk/churnfilter~ChurnFilterPlugin#setBlock","link":"<a href=\"module-kadence_churnfilter-ChurnFilterPlugin.html#setBlock\">setBlock</a>","description":"<p>Creates a new block or renews the cooldown for an existing block</p>"},{"title":"module:dusk/constants","link":"<a href=\"module-kadence_constants.html\">dusk/constants</a>"},{"title":"module:dusk/constants~ALPHA","link":"<a href=\"module-kadence_constants.html#~ALPHA\">ALPHA</a>","description":"<p>Degree of parallelism</p>"},{"title":"module:dusk/constants~B","link":"<a href=\"module-kadence_constants.html#~B\">B</a>","description":"<p>Number of bits for nodeID creation</p>"},{"title":"module:dusk/constants~FILTER_DEPTH","link":"<a href=\"module-kadence_constants.html#~FILTER_DEPTH\">FILTER_DEPTH</a>","description":"<p>Number of neighborhood hops to track\nsubsrciptions for</p>"},{"title":"module:dusk/constants~IDENTITY_DIFFICULTY","link":"<a href=\"module-kadence_constants.html#~IDENTITY_DIFFICULTY\">IDENTITY_DIFFICULTY</a>","description":"<p>Equihash params for identity proofs</p>"},{"title":"module:dusk/constants~K","link":"<a href=\"module-kadence_constants.html#~K\">K</a>","description":"<p>Number of contacts held in a bucket</p>"},{"title":"module:dusk/constants~LRU_CACHE_SIZE","link":"<a href=\"module-kadence_constants.html#~LRU_CACHE_SIZE\">LRU_CACHE_SIZE</a>","description":"<p>Number of used hashcash stamps to track</p>"},{"title":"module:dusk/constants~MAX_RELAY_HOPS","link":"<a href=\"module-kadence_constants.html#~MAX_RELAY_HOPS\">MAX_RELAY_HOPS</a>","description":"<p>Maximum times a message instance will be\nrelayed when published</p>"},{"title":"module:dusk/constants~MAX_UNIMPROVED_REFRESHES","link":"<a href=\"module-kadence_constants.html#~MAX_UNIMPROVED_REFRESHES\">MAX_UNIMPROVED_REFRESHES</a>","description":"<p>Quit refreshing no improvement</p>"},{"title":"module:dusk/constants~SOFT_STATE_TIMEOUT","link":"<a href=\"module-kadence_constants.html#~SOFT_STATE_TIMEOUT\">SOFT_STATE_TIMEOUT</a>","description":"<p>Time to wait before busting the\nsubscription cache</p>"},{"title":"module:dusk/constants~T_EXPIRE","link":"<a href=\"module-kadence_constants.html#~T_EXPIRE\">T_EXPIRE</a>","description":"<p>Interval for expiring local data entries</p>"},{"title":"module:dusk/constants~T_REFRESH","link":"<a href=\"module-kadence_constants.html#~T_REFRESH\">T_REFRESH</a>","description":"<p>Interval for performing router refresh</p>"},{"title":"module:dusk/constants~T_REPLICATE","link":"<a href=\"module-kadence_constants.html#~T_REPLICATE\">T_REPLICATE</a>","description":"<p>Interval for replicating local data</p>"},{"title":"module:dusk/constants~T_REPUBLISH","link":"<a href=\"module-kadence_constants.html#~T_REPUBLISH\">T_REPUBLISH</a>","description":"<p>Interval for republishing data</p>"},{"title":"module:dusk/constants~T_RESPONSETIMEOUT","link":"<a href=\"module-kadence_constants.html#~T_RESPONSETIMEOUT\">T_RESPONSETIMEOUT</a>","description":"<p>Time to wait for RPC response</p>"},{"title":"module:dusk/constants~TESTNET_DIFFICULTY","link":"<a href=\"module-kadence_constants.html#~TESTNET_DIFFICULTY\">TESTNET_DIFFICULTY</a>","description":"<p>Testnet difficulty override</p>"},{"title":"module:dusk/contentaddress","link":"<a href=\"module-kadence_contentaddress.html\">dusk/contentaddress</a>"},{"title":"module:dusk/contentaddress","link":"<a href=\"module-kadence_contentaddress.html\">module:dusk/contentaddress</a>","description":"<p>Registers a {@link module:dusk/contentaddress~ContentAddressPlugin} with\na {@link KademliaNode}</p>"},{"title":"module:dusk/contentaddress~ContentAddressPlugin","link":"<a href=\"module-kadence_contentaddress-ContentAddressPlugin.html\">ContentAddressPlugin</a>"},{"title":"module:dusk/contentaddress~ContentAddressPlugin#validate","link":"<a href=\"module-kadence_contentaddress-ContentAddressPlugin.html#validate\">validate</a>","description":"<p>Validate the the key matches the hash of the value</p>"},{"title":"module:dusk/eclipse","link":"<a href=\"module-kadence_eclipse.html\">dusk/eclipse</a>"},{"title":"module:dusk/eclipse","link":"<a href=\"module-kadence_eclipse.html\">module:dusk/eclipse</a>","description":"<p>Registers a {@link module:dusk/eclipse~EclipsePlugin} with a\n{@link KademliaNode}</p>"},{"title":"module:dusk/eclipse~EclipseIdentity","link":"<a href=\"module-kadence_eclipse-EclipseIdentity.html\">EclipseIdentity</a>"},{"title":"module:dusk/eclipse~EclipseIdentity#solve","link":"<a href=\"module-kadence_eclipse-EclipseIdentity.html#solve\">solve</a>","description":"<p>Returns a equihash proof and resulting fingerprint</p>"},{"title":"module:dusk/eclipse~EclipseIdentity#validate","link":"<a href=\"module-kadence_eclipse-EclipseIdentity.html#validate\">validate</a>","description":"<p>Validates the</p>"},{"title":"module:dusk/eclipse~EclipsePlugin","link":"<a href=\"module-kadence_eclipse-EclipsePlugin.html\">EclipsePlugin</a>"},{"title":"module:dusk/eclipse~EclipseRules","link":"<a href=\"module-kadence_eclipse-EclipseRules.html\">EclipseRules</a>"},{"title":"module:dusk/eclipse~EclipseRules#validate","link":"<a href=\"module-kadence_eclipse-EclipseRules.html#validate\">validate</a>","description":"<p>Validates all incoming RPC messages</p>"},{"title":"module:dusk/hashcash","link":"<a href=\"module-kadence_hashcash.html\">dusk/hashcash</a>"},{"title":"module:dusk/hashcash","link":"<a href=\"module-kadence_hashcash.html\">module:dusk/hashcash</a>","description":"<p>Registers the {@link module:dusk/hashcash~HashCashPlugin} with an\n{@link AbstractNode}</p>"},{"title":"module:dusk/hashcash~HashCashPlugin","link":"<a href=\"module-kadence_hashcash-HashCashPlugin.html\">HashCashPlugin</a>"},{"title":"module:dusk/hashcash~HashCashPlugin.parse","link":"<a href=\"module-kadence_hashcash-HashCashPlugin.html#.parse\">parse</a>","description":"<p>Parses hashcash stamp header into an object</p>"},{"title":"module:dusk/hashcash~HashCashPlugin#prove","link":"<a href=\"module-kadence_hashcash-HashCashPlugin.html#prove\">prove</a>","description":"<p>Add proof of work to outgoing message</p>"},{"title":"module:dusk/hashcash~HashCashPlugin#verify","link":"<a href=\"module-kadence_hashcash-HashCashPlugin.html#verify\">verify</a>","description":"<p>Verifies the proof of work on the request object</p>"},{"title":"module:dusk/hashcash~HashCashPlugin~stamp","link":"<a href=\"module-kadence_hashcash-HashCashPlugin.html#~stamp\">stamp</a>"},{"title":"module:dusk/hibernate","link":"<a href=\"module-kadence_hibernate.html\">dusk/hibernate</a>"},{"title":"module:dusk/hibernate","link":"<a href=\"module-kadence_hibernate.html\">module:dusk/hibernate</a>","description":"<p>Regsiters a {@link HibernatePlugin} with an {@link AbstractNode}</p>"},{"title":"module:dusk/hibernate~HibernatePlugin","link":"<a href=\"module-kadence_hibernate-HibernatePlugin.html\">HibernatePlugin</a>"},{"title":"module:dusk/hibernate~HibernatePlugin#detect","link":"<a href=\"module-kadence_hibernate-HibernatePlugin.html#detect\">detect</a>","description":"<p>Check if hibernating when messages received</p>"},{"title":"module:dusk/hibernate~HibernatePlugin#hibernating","link":"<a href=\"module-kadence_hibernate-HibernatePlugin.html#hibernating\">hibernating</a>"},{"title":"module:dusk/hibernate~HibernatePlugin#meter","link":"<a href=\"module-kadence_hibernate-HibernatePlugin.html#meter\">meter</a>","description":"<p>Return a meter stream that increments the given accounting property</p>"},{"title":"module:dusk/hibernate~HibernatePlugin#start","link":"<a href=\"module-kadence_hibernate-HibernatePlugin.html#start\">start</a>","description":"<p>Starts the accounting reset timeout</p>"},{"title":"module:dusk/logger","link":"<a href=\"module-kadence_logger.html\">dusk/logger</a>"},{"title":"module:dusk/logger","link":"<a href=\"module-kadence_logger.html\">module:dusk/logger</a>","description":"<p>Attaches a verbose logger to a {@link AbstractNode}</p>"},{"title":"module:dusk/logger~IncomingMessageLogger","link":"<a href=\"module-kadence_logger-IncomingMessageLogger.html\">IncomingMessageLogger</a>"},{"title":"module:dusk/logger~OutgoingMessageLogger","link":"<a href=\"module-kadence_logger-OutgoingMessageLogger.html\">OutgoingMessageLogger</a>"},{"title":"module:dusk/onion","link":"<a href=\"module-kadence_onion.html\">dusk/onion</a>"},{"title":"module:dusk/onion","link":"<a href=\"module-kadence_onion.html\">module:dusk/onion</a>","description":"<p>Registers a {@link OnionPlugin} with an {@link AbstractNode}</p>"},{"title":"module:dusk/onion~OnionPlugin","link":"<a href=\"module-kadence_onion-OnionPlugin.html\">OnionPlugin</a>","description":"<p>Creates the transport wrapper for using a SOCKS5 proxy</p>"},{"title":"module:dusk/onion~OnionPlugin#createClearAgent","link":"<a href=\"module-kadence_onion-OnionPlugin.html#createClearAgent\">createClearAgent</a>","description":"<p>Returns a clear text agent instance to use for the provided target</p>"},{"title":"module:dusk/onion~OnionPlugin#createSecureAgent","link":"<a href=\"module-kadence_onion-OnionPlugin.html#createSecureAgent\">createSecureAgent</a>","description":"<p>Returns an agent instance to use for the provided target</p>"},{"title":"module:dusk/quasar","link":"<a href=\"module-kadence_quasar.html\">dusk/quasar</a>"},{"title":"module:dusk/quasar","link":"<a href=\"module-kadence_quasar.html\">module:dusk/quasar</a>","description":"<p>Registers a {@link module:dusk/quasar~QuasarPlugin} with a {@link KademliaNode}</p>"},{"title":"module:dusk/quasar~QuasarPlugin","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html\">QuasarPlugin</a>"},{"title":"module:dusk/quasar~QuasarPlugin#hasNeighborSubscribedTo","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#hasNeighborSubscribedTo\">hasNeighborSubscribedTo</a>","description":"<p>Check if our neighbors are subscribed to the topic</p>"},{"title":"module:dusk/quasar~QuasarPlugin#isSubscribedTo","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#isSubscribedTo\">isSubscribedTo</a>","description":"<p>Check if we are subscribed to the topic</p>"},{"title":"module:dusk/quasar~QuasarPlugin#neighbors","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#neighbors\">neighbors</a>","description":"<p>Returns our ALPHA closest neighbors</p>"},{"title":"module:dusk/quasar~QuasarPlugin#pullFilterFrom","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#pullFilterFrom\">pullFilterFrom</a>","description":"<p>Requests the attenuated bloom filter from the supplied contact</p>"},{"title":"module:dusk/quasar~QuasarPlugin#pullFilters","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#pullFilters\">pullFilters</a>","description":"<p>Requests neighbor bloom filters and merges with our records</p>"},{"title":"module:dusk/quasar~QuasarPlugin#pushFilters","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#pushFilters\">pushFilters</a>","description":"<p>Notifies neighbors that our subscriptions have changed</p>"},{"title":"module:dusk/quasar~QuasarPlugin#pushFilterTo","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#pushFilterTo\">pushFilterTo</a>","description":"<p>Sends our attenuated bloom filter to the supplied contact</p>"},{"title":"module:dusk/quasar~QuasarPlugin#quasarPublish","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#quasarPublish\">quasarPublish</a>","description":"<p>Publishes the content to the network by selecting ALPHA contacts closest\nto the node identity (or the supplied routing key). Errors if message is\nunable to be delivered to any contacts. Tries to deliver to ALPHA contacts\nuntil exhausted.</p>"},{"title":"module:dusk/quasar~QuasarPlugin#quasarSubscribe","link":"<a href=\"module-kadence_quasar-QuasarPlugin.html#quasarSubscribe\">quasarSubscribe</a>","description":"<p>Publishes the content to the network</p>"},{"title":"module:dusk/quasar~QuasarRules","link":"<a href=\"module-kadence_quasar-QuasarRules.html\">QuasarRules</a>"},{"title":"module:dusk/quasar~QuasarRules.shouldRelayPublication","link":"<a href=\"module-kadence_quasar-QuasarRules.html#.shouldRelayPublication\">shouldRelayPublication</a>","description":"<p>Returns a boolean indicating if we should relay the message to the contact</p>"},{"title":"module:dusk/quasar~QuasarRules#publish","link":"<a href=\"module-kadence_quasar-QuasarRules.html#publish\">publish</a>","description":"<p>Upon receipt of a PUBLISH message, we validate it, then check if we or\nour neighbors are subscribed. If we are subscribed, we execute our\nhandler. If our neighbors are subscribed, we relay the publication to\nALPHA random of the closest K. If our neighbors are not subscribed, we\nrelay the publication to a random contact</p>"},{"title":"module:dusk/quasar~QuasarRules#subscribe","link":"<a href=\"module-kadence_quasar-QuasarRules.html#subscribe\">subscribe</a>","description":"<p>Upon receipt of a SUBSCRIBE message, we simply respond with a serialized\nversion of our attenuated bloom filter</p>"},{"title":"module:dusk/quasar~QuasarRules#update","link":"<a href=\"module-kadence_quasar-QuasarRules.html#update\">update</a>","description":"<p>Upon receipt of an UPDATE message we merge the delivered attenuated bloom\nfilter with our own</p>"},{"title":"module:dusk/rolodex","link":"<a href=\"module-kadence_rolodex.html\">dusk/rolodex</a>"},{"title":"module:dusk/rolodex","link":"<a href=\"module-kadence_rolodex.html\">module:dusk/rolodex</a>","description":"<p>Registers a {@link module:dusk/rolodex~RolodexPlugin} with a\n{@link KademliaNode}</p>"},{"title":"module:dusk/rolodex~RolodexPlugin","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html\">RolodexPlugin</a>"},{"title":"module:dusk/rolodex~RolodexPlugin#getBootstrapCandidates","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html#getBootstrapCandidates\">getBootstrapCandidates</a>","description":"<p>Returns a list of bootstrap nodes from local profiles</p>"},{"title":"module:dusk/rolodex~RolodexPlugin#getExternalPeerInfo","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html#getExternalPeerInfo\">getExternalPeerInfo</a>","description":"<p>Returns the external peer data for the given identity</p>"},{"title":"module:dusk/rolodex~RolodexPlugin#getInternalPeerInfo","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html#getInternalPeerInfo\">getInternalPeerInfo</a>","description":"<p>Returns the internal peer data for the given identity</p>"},{"title":"module:dusk/rolodex~RolodexPlugin#setExternalPeerInfo","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html#setExternalPeerInfo\">setExternalPeerInfo</a>","description":"<p>Returns the external peer data for the given identity</p>"},{"title":"module:dusk/rolodex~RolodexPlugin#setInternalPeerInfo","link":"<a href=\"module-kadence_rolodex-RolodexPlugin.html#setInternalPeerInfo\">setInternalPeerInfo</a>","description":"<p>Returns the internal peer data for the given identity</p>"},{"title":"module:dusk/spartacus","link":"<a href=\"module-kadence_spartacus.html\">dusk/spartacus</a>"},{"title":"module:dusk/spartacus","link":"<a href=\"module-kadence_spartacus.html\">module:dusk/spartacus</a>","description":"<p>Registers a {@link module:dusk/spartacus~SpartacusPlugin} with a\n{@link KademliaNode}</p>"},{"title":"module:dusk/spartacus~SpartacusPlugin","link":"<a href=\"module-kadence_spartacus-SpartacusPlugin.html\">SpartacusPlugin</a>","description":"<p>Creates the plugin instance given a node and optional identity</p>"},{"title":"module:dusk/spartacus~SpartacusPlugin#deserialize","link":"<a href=\"module-kadence_spartacus-SpartacusPlugin.html#deserialize\">deserialize</a>","description":"<p>Parses and verifies the signature payload, then passes through to the\nJsonRpcDeserializer if successful</p>"},{"title":"module:dusk/spartacus~SpartacusPlugin#serialize","link":"<a href=\"module-kadence_spartacus-SpartacusPlugin.html#serialize\">serialize</a>","description":"<p>Processes with JsonRpcSerializer then signs the result and appends an\nadditional payload containing signature+identity information</p>"},{"title":"module:dusk/spartacus~SpartacusPlugin#setValidationPeriod","link":"<a href=\"module-kadence_spartacus-SpartacusPlugin.html#setValidationPeriod\">setValidationPeriod</a>","description":"<p>Sets the validation period for nodes</p>"},{"title":"module:dusk/spartacus~SpartacusPlugin#validate","link":"<a href=\"module-kadence_spartacus-SpartacusPlugin.html#validate\">validate</a>","description":"<p>Checks if the sender is addressable at the claimed contact information\nand cross checks signatures between the original sender and the node\naddressed. This is intended to prevent reflection attacks and general\nDDoS via spam.</p>"},{"title":"module:dusk/traverse","link":"<a href=\"module-kadence_traverse.html\">dusk/traverse</a>"},{"title":"module:dusk/traverse","link":"<a href=\"module-kadence_traverse.html\">module:dusk/traverse</a>","description":"<p>Registers a {@link module:dusk/traverse~TraversePlugin} with an\n{@link AbstractNode}. Strategies are attempted in the order they are\ndefined.</p>"},{"title":"module:dusk/traverse~NATPMPStrategy","link":"<a href=\"module-kadence_traverse-NATPMPStrategy.html\">NATPMPStrategy</a>"},{"title":"module:dusk/traverse~NATPMPStrategy#exec","link":"<a href=\"module-kadence_traverse-NATPMPStrategy.html#exec\">exec</a>"},{"title":"module:dusk/traverse~ReverseTunnelStrategy","link":"<a href=\"module-kadence_traverse-ReverseTunnelStrategy.html\">ReverseTunnelStrategy</a>"},{"title":"module:dusk/traverse~ReverseTunnelStrategy#exec","link":"<a href=\"module-kadence_traverse-ReverseTunnelStrategy.html#exec\">exec</a>"},{"title":"module:dusk/traverse~TraversePlugin","link":"<a href=\"module-kadence_traverse-TraversePlugin.html\">TraversePlugin</a>"},{"title":"module:dusk/traverse~TraverseStrategy","link":"<a href=\"module-kadence_traverse-TraverseStrategy.html\">TraverseStrategy</a>"},{"title":"module:dusk/traverse~TraverseStrategy#exec","link":"<a href=\"module-kadence_traverse-TraverseStrategy.html#exec\">exec</a>"},{"title":"module:dusk/traverse~UPNPStrategy","link":"<a href=\"module-kadence_traverse-UPNPStrategy.html\">UPNPStrategy</a>"},{"title":"module:dusk/traverse~UPNPStrategy#exec","link":"<a href=\"module-kadence_traverse-UPNPStrategy.html#exec\">exec</a>"},{"title":"module:dusk/trust","link":"<a href=\"module-kadence_trust.html\">dusk/trust</a>"},{"title":"module:dusk/trust","link":"<a href=\"module-kadence_trust.html\">module:dusk/trust</a>","description":"<p>Registers a {@link module:dusk/trust~TrustPlugin} with a\n{@link KademliaNode}</p>"},{"title":"module:dusk/trust~TrustPlugin","link":"<a href=\"module-kadence_trust-TrustPlugin.html\">TrustPlugin</a>"},{"title":"module:dusk/trust~TrustPlugin.MODE_BLACKLIST","link":"<a href=\"module-kadence_trust-TrustPlugin.html#.MODE_BLACKLIST\">MODE_BLACKLIST</a>","description":"<p>Mode flag passed to {@link TrustPlugin} to place into blacklist mode</p>"},{"title":"module:dusk/trust~TrustPlugin.MODE_WHITELIST","link":"<a href=\"module-kadence_trust-TrustPlugin.html#.MODE_WHITELIST\">MODE_WHITELIST</a>","description":"<p>Mode flag passed to {@link TrustPlugin} to place into whitelist mode</p>"},{"title":"module:dusk/trust~TrustPlugin#addTrustPolicy","link":"<a href=\"module-kadence_trust-TrustPlugin.html#addTrustPolicy\">addTrustPolicy</a>","description":"<p>Adds a new trust policy</p>"},{"title":"module:dusk/trust~TrustPlugin#getTrustPolicy","link":"<a href=\"module-kadence_trust-TrustPlugin.html#getTrustPolicy\">getTrustPolicy</a>","description":"<p>Returns the trust policy for the given identity</p>"},{"title":"module:dusk/trust~TrustPlugin#removeTrustPolicy","link":"<a href=\"module-kadence_trust-TrustPlugin.html#removeTrustPolicy\">removeTrustPolicy</a>","description":"<p>Removes an existing trust policy</p>"},{"title":"module:dusk/trust~TrustPlugin~policy","link":"<a href=\"module-kadence_trust-TrustPlugin.html#~policy\">policy</a>"},{"title":"module:dusk/utils","link":"<a href=\"module-kadence_utils.html\">dusk/utils</a>"},{"title":"module:dusk/utils.compareKeyBuffers","link":"<a href=\"module-kadence_utils.html#.compareKeyBuffers\">compareKeyBuffers</a>","description":"<p>Compare two buffers for sorting</p>"},{"title":"module:dusk/utils.eqsolve","link":"<a href=\"module-kadence_utils.html#.eqsolve\">eqsolve</a>","description":"<p>Performs an equihash solution using defaults</p>"},{"title":"module:dusk/utils.eqverify","link":"<a href=\"module-kadence_utils.html#.eqverify\">eqverify</a>","description":"<p>Perform an equihash proof verification</p>"},{"title":"module:dusk/utils.generatePrivateKey","link":"<a href=\"module-kadence_utils.html#.generatePrivateKey\">generatePrivateKey</a>","description":"<p>Generates a private key</p>"},{"title":"module:dusk/utils.getBucketIndex","link":"<a href=\"module-kadence_utils.html#.getBucketIndex\">getBucketIndex</a>","description":"<p>Calculate the index of the bucket that key would belong to</p>"},{"title":"module:dusk/utils.getContactURL","link":"<a href=\"module-kadence_utils.html#.getContactURL\">getContactURL</a>","description":"<p>Returns a stringified URL from the supplied contact object</p>"},{"title":"module:dusk/utils.getDistance","link":"<a href=\"module-kadence_utils.html#.getDistance\">getDistance</a>","description":"<p>Calculate the distance between two keys</p>"},{"title":"module:dusk/utils.getPowerOfTwoBufferForIndex","link":"<a href=\"module-kadence_utils.html#.getPowerOfTwoBufferForIndex\">getPowerOfTwoBufferForIndex</a>","description":"<p>Returns a buffer with a power-of-two value given a bucket index</p>"},{"title":"module:dusk/utils.getRandomBufferInBucketRange","link":"<a href=\"module-kadence_utils.html#.getRandomBufferInBucketRange\">getRandomBufferInBucketRange</a>","description":"<p>Generate a random number within the bucket's range</p>"},{"title":"module:dusk/utils.getRandomKeyBuffer","link":"<a href=\"module-kadence_utils.html#.getRandomKeyBuffer\">getRandomKeyBuffer</a>","description":"<p>Returns a random valid key/identity as a buffer</p>"},{"title":"module:dusk/utils.getRandomKeyString","link":"<a href=\"module-kadence_utils.html#.getRandomKeyString\">getRandomKeyString</a>","description":"<p>Returns a random valid key/identity as a string</p>"},{"title":"module:dusk/utils.hash160","link":"<a href=\"module-kadence_utils.html#.hash160\">hash160</a>","description":"<p>Returns the RMD-160 hash of the input</p>"},{"title":"module:dusk/utils.hash256","link":"<a href=\"module-kadence_utils.html#.hash256\">hash256</a>","description":"<p>Returns the SHA-256 hash of the input</p>"},{"title":"module:dusk/utils.isCompatibleVersion","link":"<a href=\"module-kadence_utils.html#.isCompatibleVersion\">isCompatibleVersion</a>","description":"<p>Returns whether or not the supplied semver tag is compatible</p>"},{"title":"module:dusk/utils.isHexaString","link":"<a href=\"module-kadence_utils.html#.isHexaString\">isHexaString</a>","description":"<p>Tests if a string is valid hex</p>"},{"title":"module:dusk/utils.isValidContact","link":"<a href=\"module-kadence_utils.html#.isValidContact\">isValidContact</a>","description":"<p>Determines if the supplied contact is valid</p>"},{"title":"module:dusk/utils.keyBufferIsValid","link":"<a href=\"module-kadence_utils.html#.keyBufferIsValid\">keyBufferIsValid</a>","description":"<p>Determines if the given buffer key is valid</p>"},{"title":"module:dusk/utils.keyStringIsValid","link":"<a href=\"module-kadence_utils.html#.keyStringIsValid\">keyStringIsValid</a>","description":"<p>Determines if the given string key is valid</p>"},{"title":"module:dusk/utils.parseContactURL","link":"<a href=\"module-kadence_utils.html#.parseContactURL\">parseContactURL</a>","description":"<p>Returns a parsed contact object from a URL</p>"},{"title":"module:dusk/utils.preventConvoy","link":"<a href=\"module-kadence_utils.html#.preventConvoy\">preventConvoy</a>","description":"<p>Wraps the supplied function in a pseudo-random length timeout to help\nprevent convoy effects. These occur when a number of processes need to use\na resource in turn. There is a tendency for such bursts of activity to\ndrift towards synchronization, which can be disasterous. In Kademlia all\nnodes are requird to republish their contents every hour (T_REPLICATE). A\nconvoy effect might lead to this being synchronized across the network,\nwhich would appear to users as the network dying every hour. The default\ntimeout will be between 0 and 30 minutes unless specified.</p>"},{"title":"module:dusk/utils.satisfiesDifficulty","link":"<a href=\"module-kadence_utils.html#.satisfiesDifficulty\">satisfiesDifficulty</a>","description":"<p>Returns a boolean indicating if the supplied buffer meets the given\ndifficulty requirement</p>"},{"title":"module:dusk/utils.toBinaryStringFromBuffer","link":"<a href=\"module-kadence_utils.html#.toBinaryStringFromBuffer\">toBinaryStringFromBuffer</a>","description":"<p>Converts a buffer to a string representation of binary</p>"},{"title":"module:dusk/utils.toPublicKeyHash","link":"<a href=\"module-kadence_utils.html#.toPublicKeyHash\">toPublicKeyHash</a>","description":"<p>Takes a public key are returns the identity</p>"},{"title":"module:dusk/utils.validateLogger","link":"<a href=\"module-kadence_utils.html#.validateLogger\">validateLogger</a>","description":"<p>Validates the given object is a logger</p>"},{"title":"module:dusk/utils.validateStorageAdapter","link":"<a href=\"module-kadence_utils.html#.validateStorageAdapter\">validateStorageAdapter</a>","description":"<p>Validates the given object is a storage adapter</p>"},{"title":"module:dusk/utils.validateTransport","link":"<a href=\"module-kadence_utils.html#.validateTransport\">validateTransport</a>","description":"<p>Validates the given object is a transport</p>"},{"title":"module:dusk/utils~EquihashProof","link":"<a href=\"module-kadence_utils.html#~EquihashProof\">EquihashProof</a>"},{"title":"module:dusk/version","link":"<a href=\"module-kadence_version.html\">dusk/version</a>"},{"title":"module:dusk/version.toString","link":"<a href=\"module-kadence_version.html#.toString\">toString</a>","description":"<p>Returns human readable string of versions</p>"},{"title":"module:dusk/version~protocol","link":"<a href=\"module-kadence_version.html#~protocol\">protocol</a>","description":"<p>The supported protocol version</p>"},{"title":"module:dusk/version~software","link":"<a href=\"module-kadence_version.html#~software\">software</a>","description":"<p>The current software version</p>"},{"title":"QuasarPlugin~quasarPublishCallback","link":"<a href=\"QuasarPlugin.html#~quasarPublishCallback\">quasarPublishCallback</a>"},{"title":"QuasarPlugin~quasarSubscribeHandler","link":"<a href=\"QuasarPlugin.html#~quasarSubscribeHandler\">quasarSubscribeHandler</a>"},{"title":"RoutingTable","link":"<a href=\"RoutingTable.html\">RoutingTable</a>","description":"<p>Constructs a routing table</p>"},{"title":"RoutingTable#addContactByNodeId","link":"<a href=\"RoutingTable.html#addContactByNodeId\">addContactByNodeId</a>","description":"<p>Adds the contact to the routing table in the proper bucket position,\nreturning the [bucketIndex, bucket, contactIndex, contact]; if the\nreturned contactIndex is -1, it indicates the bucket is full and the\ncontact was not added; kademlia implementations should PING the contact\nat bucket.head to determine if it should be dropped before calling this\nmethod again</p>"},{"title":"RoutingTable#getClosestBucket","link":"<a href=\"RoutingTable.html#getClosestBucket\">getClosestBucket</a>","description":"<p>Returns the [index, bucket] of the occupied bucket with the lowest index</p>"},{"title":"RoutingTable#getClosestContactsToKey","link":"<a href=\"RoutingTable.html#getClosestContactsToKey\">getClosestContactsToKey</a>","description":"<p>Returns a array of N contacts closest to the supplied key</p>"},{"title":"RoutingTable#getContactByNodeId","link":"<a href=\"RoutingTable.html#getContactByNodeId\">getContactByNodeId</a>","description":"<p>Returns the contact object associated with the given node id</p>"},{"title":"RoutingTable#indexOf","link":"<a href=\"RoutingTable.html#indexOf\">indexOf</a>","description":"<p>Returns the bucket index of the given node id</p>"},{"title":"RoutingTable#length","link":"<a href=\"RoutingTable.html#length\">length</a>","description":"<p>Returns the total buckets in the routing table</p>"},{"title":"RoutingTable#removeContactByNodeId","link":"<a href=\"RoutingTable.html#removeContactByNodeId\">removeContactByNodeId</a>","description":"<p>Removes the contact from the routing table given a node id</p>"},{"title":"RoutingTable#size","link":"<a href=\"RoutingTable.html#size\">size</a>","description":"<p>Returns the total contacts in the routing table</p>"},{"title":"UDPTransport","link":"<a href=\"UDPTransport.html\">UDPTransport</a>","description":"<p>Constructs a datagram socket interface</p>"},{"title":"UDPTransport#listen","link":"<a href=\"UDPTransport.html#listen\">listen</a>","description":"<p>Binds the socket to the [port] [, address] [, callback]</p>"}]}